{
  "address": "0x41025383063E591e32eDcfa3D6D48D8aA68dBc0A",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "something",
          "type": "address"
        }
      ],
      "name": "TestEvent",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "num",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        }
      ],
      "name": "setNum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa85653eb13ede551be0a8e004627cc4cf35c337775547f2b0b02485f861e257c",
  "receipt": {
    "to": null,
    "from": "0x19d96301865fdD07427db3c445508A051BC6D352",
    "contractAddress": "0x41025383063E591e32eDcfa3D6D48D8aA68dBc0A",
    "transactionIndex": 1,
    "gasUsed": "131359",
    "logsBloom": "0x
    "blockHash": "0x4a4adbd2a5360e48bd3de2d310d4606025c28652a1fb677310e83a1f27060cac",
    "transactionHash": "0xa85653eb13ede551be0a8e004627cc4cf35c337775547f2b0b02485f861e257c",
    "logs": [],
    "blockNumber": 49193396,
    "cumulativeGasUsed": "131359",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "31345ee18a502f9470419c2b5af0dd31",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"something\",\"type\":\"address\"}],\"name\":\"TestEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"num\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"setNum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Facets/Diamond/Test1Facet.sol\":\"Test1Facet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/Facets/Diamond/Test1Facet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// Example library to show a simple example of diamond storage\\n\\nlibrary TestLib {\\n    bytes32 constant DIAMOND_STORAGE_POSITION =\\n        keccak256(\\\"diamond.standard.test.storage\\\");\\n\\n    struct TestState {\\n        address myAddress;\\n        uint256 myNum;\\n        string word;\\n    }\\n\\n    function diamondStorage() internal pure returns (TestState storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    function num() internal view returns (uint256) {\\n        TestState storage testState = diamondStorage();\\n        return testState.myNum;\\n    }\\n\\n    function setNum(uint256 n) internal {\\n        TestState storage testState = diamondStorage();\\n        testState.myNum = n * 3;\\n    }\\n\\n    function getNum() internal view returns (uint256) {\\n        return 5;\\n    }\\n}\\n\\ncontract Test1Facet {\\n    event TestEvent(address something);\\n\\n    function num() external view returns (uint256) {\\n        return TestLib.num();\\n    }\\n\\n    function setNum(uint256 n) external {\\n        TestLib.setNum(n);\\n    }\\n\\n    function getNum() external view returns (uint256) {\\n        return TestLib.getNum();\\n    }\\n}\\n\",\"keccak256\":\"0x69ce4b86daf5392125dbb6ddd79866cf85ff7b8857b572531115f537b9cdd7d9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061016a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634e70b1dc1461004657806367e0badb14610060578063cd16ecbf14610067575b600080fd5b61004e61007c565b60405190815260200160405180910390f35b600561004e565b61007a6100753660046100f0565b61008b565b005b6000610086610097565b905090565b610094816100ac565b50565b6000806100a26100cc565b6001015492915050565b60006100b66100cc565b90506100c3826003610109565b60019091015550565b7fe172d0f8decaecdd4c56ac9d5abd3aebbc2d423f323d7c1b0d0a8a21feef1df390565b60006020828403121561010257600080fd5b5035919050565b808202811582820484141761012e57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212204b878b96a5f0144b2050d6e0242a59681d8e9b0ada2a39c15f071bc458a0222564736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80634e70b1dc1461004657806367e0badb14610060578063cd16ecbf14610067575b600080fd5b61004e61007c565b60405190815260200160405180910390f35b600561004e565b61007a6100753660046100f0565b61008b565b005b6000610086610097565b905090565b610094816100ac565b50565b6000806100a26100cc565b6001015492915050565b60006100b66100cc565b90506100c3826003610109565b60019091015550565b7fe172d0f8decaecdd4c56ac9d5abd3aebbc2d423f323d7c1b0d0a8a21feef1df390565b60006020828403121561010257600080fd5b5035919050565b808202811582820484141761012e57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212204b878b96a5f0144b2050d6e0242a59681d8e9b0ada2a39c15f071bc458a0222564736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}