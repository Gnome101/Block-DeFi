{
  "_format": "hh-sol-artifact-1",
  "contractName": "HookFacet",
  "sourceName": "contracts/Facets/HookFacet.sol",
  "abi": [
    {
      "inputs": [],
      "name": "HookNotImplemented",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "afterDonate",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "uint160",
          "name": "",
          "type": "uint160"
        },
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "afterInitialize",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "int24",
              "name": "tickLower",
              "type": "int24"
            },
            {
              "internalType": "int24",
              "name": "tickUpper",
              "type": "int24"
            },
            {
              "internalType": "int256",
              "name": "liquidityDelta",
              "type": "int256"
            }
          ],
          "internalType": "struct IPoolManager.ModifyPositionParams",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "BalanceDelta",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "afterModifyPosition",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "key",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "zeroForOne",
              "type": "bool"
            },
            {
              "internalType": "int256",
              "name": "amountSpecified",
              "type": "int256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct IPoolManager.SwapParams",
          "name": "params",
          "type": "tuple"
        },
        {
          "internalType": "BalanceDelta",
          "name": "delta",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "hookData",
          "type": "bytes"
        }
      ],
      "name": "afterSwap",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeDonate",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "uint160",
          "name": "",
          "type": "uint160"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeInitialize",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "int24",
              "name": "tickLower",
              "type": "int24"
            },
            {
              "internalType": "int24",
              "name": "tickUpper",
              "type": "int24"
            },
            {
              "internalType": "int256",
              "name": "liquidityDelta",
              "type": "int256"
            }
          ],
          "internalType": "struct IPoolManager.ModifyPositionParams",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeModifyPosition",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "zeroForOne",
              "type": "bool"
            },
            {
              "internalType": "int256",
              "name": "amountSpecified",
              "type": "int256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct IPoolManager.SwapParams",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeSwap",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "zeroForOne",
              "type": "bool"
            },
            {
              "internalType": "int256",
              "name": "amountSpecified",
              "type": "int256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct IPoolManager.SwapParams",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHooksCalls",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "beforeInitialize",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "afterInitialize",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "beforeModifyPosition",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "afterModifyPosition",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "beforeSwap",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "afterSwap",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "beforeDonate",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "afterDonate",
              "type": "bool"
            }
          ],
          "internalType": "struct Hooks.Calls",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLeAwesomeCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50611256806100206000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c80632ab7a3e21461009e57806330b7cdef146100d15780633440d820146100fd578063575e24b414610110578063612c39b71461011e578063a910f80f14610133578063b47b2fb114610141578063b6a8b0fa14610154578063deb95a6814610162578063e1b4af6914610154578063fe9a6f4514610178575b600080fd5b6100b86100ac366004610b9f565b610bb895945050505050565b60405162ffffff90911681526020015b60405180910390f35b6100e46100df366004610c1a565b61018b565b6040516001600160e01b031990911681526020016100c8565b6100e461010b366004610c9f565b6101a0565b6100e461010b366004610b9f565b6101266101b4565b6040516100c89190610cfd565b6100e46100df366004610d86565b6100e461014f366004610c1a565b6101c9565b6100e46100df366004610dfd565b61016a6101e6565b6040519081526020016100c8565b6100e4610186366004610b9f565b6101f0565b600061019561020c565b509695505050505050565b60006101aa61020c565b5095945050505050565b6101bc610a74565b6101c4610227565b905090565b60006101db63b47b2fb160e01b610277565b979650505050505050565b60006101c46103d6565b600061020263fe9a6f4560e01b6103eb565b9695505050505050565b6000604051630a85dc2960e01b815260040160405180910390fd5b61022f610a74565b5060408051610100810182526000808252602082018190526001928201839052606082018190526080820181905260a082019290925260c0810182905260e081019190915290565b600080610282610416565b9050600061028e61043a565b60018301805491925060006102a283610e71565b909155505060068101546102bd90610100900460ff1661045e565b6006810154610100900460ff166103ce576040805180820190915260068152650d8cadccee8d60d31b602082015260048201546102fa91906104a2565b60005b60048201548110156103cc576103b982600401828154811061032157610321610e8a565b90600052602060002001805461033690610ea0565b80601f016020809104026020016040519081016040528092919081815260200182805461036290610ea0565b80156103af5780601f10610384576101008083540402835291602001916103af565b820191906000526020600020905b81548152906001019060200180831161039257829003601f168201915b50505050506104eb565b50806103c481610e71565b9150506102fd565b505b509192915050565b6000806103e1610416565b6001015492915050565b6000806103f6610416565b600181018054919250600061040a83610e71565b90915550929392505050565b7ff3438885051c2d9738b375a323a098c058d6c0e57a376bd4989734002b250c4590565b7f4bc1672041418a922447d83c0efd37e6707ed20ab7e53ca3f20ce1d16cac307590565b604051811515602482015261049f9060440160408051601f198184030181529190526020810180516001600160e01b03166332458eed60e01b179052610598565b50565b6104e782826040516024016104b8929190610f24565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610598565b5050565b606060006104f761043a565b60068101805461ffff19166101011790559050600080610516856105a1565b915091506000610525826105c1565b965090506105338382610647565b945060038651108061054a5750600684015460ff16155b156105795784516105649060018601906020880190610ab8565b50505050600601805461ff0019169055919050565b6105838587610a27565b955061058e866104eb565b5050505050919050565b61049f81610a53565b606080828060200190518101906105b89190610ff7565b91509150915091565b602081015160608060005b600585516105da91906110c1565b81101561063e5781856105ee8360056110d4565b815181106105fe576105fe610e8a565b602001015160f81c60f81b60405160200161061a9291906110e7565b6040516020818303038152906040529150808061063690610e71565b9150506105cc565b50919391925050565b606081600f600482811a9081901c821691168360008381036106e75760408051600481526024810182526020810180516001600160e01b03166001600160e01b031989161790529051309161069b91611116565b6000604051808303816000865af19150503d80600081146106d8576040519150601f19603f3d011682016040523d82523d6000602084013e6106dd565b606091505b5092509050610789565b306001600160a01b03168589604051602401610703919061116d565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516107419190611116565b6000604051808303816000865af19150503d806000811461077e576040519150601f19603f3d011682016040523d82523d6000602084013e610783565b606091505b50925090505b8260ff166000036107e357604080516001808252818301909252600091602080830190803683370190505090506000816000815181106107cb576107cb610e8a565b60209081029190910101529550610a21945050505050565b8260ff1660010361087c576000828060200190518101906108049190611187565b905060008460ff166001600160401b0381111561082357610823610f46565b60405190808252806020026020018201604052801561084c578160200160208202803683370190505b509050818160008151811061086357610863610e8a565b60209081029190910101529650610a2195505050505050565b8260ff16600203610939576000808380602001905181019061089e91906111a0565b9150915060008560ff166001600160401b038111156108bf576108bf610f46565b6040519080825280602002602001820160405280156108e8578160200160208202803683370190505b50905082816000815181106108ff576108ff610e8a565b602002602001018181525050818160018151811061091f5761091f610e8a565b60209081029190910101529750610a219650505050505050565b8260ff16600303610a1b5760008060008480602001905181019061095d91906111c4565b92509250925060008660ff166001600160401b0381111561098057610980610f46565b6040519080825280602002602001820160405280156109a9578160200160208202803683370190505b50905083816000815181106109c0576109c0610e8a565b60200260200101818152505082816001815181106109e0576109e0610e8a565b6020026020010181815250508181600281518110610a0057610a00610e8a565b60209081029190910101529850610a21975050505050505050565b50505050505b92915050565b6040518190610a3c90849083906020016111f2565b604051602081830303815290604052905092915050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b828054828255906000526020600020908101928215610af3579160200282015b82811115610af3578251825591602001919060010190610ad8565b50610aff929150610b03565b5090565b5b80821115610aff5760008155600101610b04565b6001600160a01b038116811461049f57600080fd5b600060a08284031215610b3f57600080fd5b50919050565b600060608284031215610b3f57600080fd5b60008083601f840112610b6957600080fd5b5081356001600160401b03811115610b8057600080fd5b602083019150836020828501011115610b9857600080fd5b9250929050565b60008060008060006101408688031215610bb857600080fd5b8535610bc381610b18565b9450610bd28760208801610b2d565b9350610be18760c08801610b45565b92506101208601356001600160401b03811115610bfd57600080fd5b610c0988828901610b57565b969995985093965092949392505050565b6000806000806000806101608789031215610c3457600080fd5b8635610c3f81610b18565b9550610c4e8860208901610b2d565b9450610c5d8860c08901610b45565b935061012087013592506101408701356001600160401b03811115610c8157600080fd5b610c8d89828a01610b57565b979a9699509497509295939492505050565b60008060008060006101008688031215610cb857600080fd5b8535610cc381610b18565b9450610cd28760208801610b2d565b935060c0860135610ce281610b18565b925060e08601356001600160401b03811115610bfd57600080fd5b6000610100820190508251151582526020830151151560208301526040830151151560408301526060830151151560608301526080830151610d43608084018215159052565b5060a0830151610d5760a084018215159052565b5060c0830151610d6b60c084018215159052565b5060e0830151610d7f60e084018215159052565b5092915050565b6000806000806000806101208789031215610da057600080fd5b8635610dab81610b18565b9550610dba8860208901610b2d565b945060c0870135610dca81610b18565b935060e0870135600281900b8114610de157600080fd5b92506101008701356001600160401b03811115610c8157600080fd5b6000806000806000806101208789031215610e1757600080fd5b8635610e2281610b18565b9550610e318860208901610b2d565b945060c0870135935060e087013592506101008701356001600160401b03811115610c8157600080fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610e8357610e83610e5b565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610eb457607f821691505b602082108103610b3f57634e487b7160e01b600052602260045260246000fd5b60005b83811015610eef578181015183820152602001610ed7565b50506000910152565b60008151808452610f10816020860160208601610ed4565b601f01601f19169290920160200192915050565b604081526000610f376040830185610ef8565b90508260208301529392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715610f8457610f84610f46565b604052919050565b600082601f830112610f9d57600080fd5b81516001600160401b03811115610fb657610fb6610f46565b610fc9601f8201601f1916602001610f5c565b818152846020838601011115610fde57600080fd5b610fef826020830160208701610ed4565b949350505050565b6000806040838503121561100a57600080fd5b82516001600160401b038082111561102157600080fd5b818501915085601f83011261103557600080fd5b815160208282111561104957611049610f46565b8160051b611058828201610f5c565b928352848101820192828101908a85111561107257600080fd5b958301955b8487101561109057865182529583019590830190611077565b92890151929750919450505050808211156110aa57600080fd5b506110b785828601610f8c565b9150509250929050565b81810381811115610a2157610a21610e5b565b80820180821115610a2157610a21610e5b565b600083516110f9818460208801610ed4565b6001600160f81b0319939093169190920190815260010192915050565b60008251611128818460208701610ed4565b9190910192915050565b600081518084526020808501945080840160005b8381101561116257815187529582019590820190600101611146565b509495945050505050565b6020815260006111806020830184611132565b9392505050565b60006020828403121561119957600080fd5b5051919050565b600080604083850312156111b357600080fd5b505080516020909101519092909150565b6000806000606084860312156111d957600080fd5b8351925060208401519150604084015190509250925092565b6040815260006112056040830185611132565b82810360208401526112178185610ef8565b9594505050505056fea26469706673582212200d503e83593674a93de4cab8396bb8d06e445fb66bf69593a05ff4fa8a5eeeb864736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100995760003560e01c80632ab7a3e21461009e57806330b7cdef146100d15780633440d820146100fd578063575e24b414610110578063612c39b71461011e578063a910f80f14610133578063b47b2fb114610141578063b6a8b0fa14610154578063deb95a6814610162578063e1b4af6914610154578063fe9a6f4514610178575b600080fd5b6100b86100ac366004610b9f565b610bb895945050505050565b60405162ffffff90911681526020015b60405180910390f35b6100e46100df366004610c1a565b61018b565b6040516001600160e01b031990911681526020016100c8565b6100e461010b366004610c9f565b6101a0565b6100e461010b366004610b9f565b6101266101b4565b6040516100c89190610cfd565b6100e46100df366004610d86565b6100e461014f366004610c1a565b6101c9565b6100e46100df366004610dfd565b61016a6101e6565b6040519081526020016100c8565b6100e4610186366004610b9f565b6101f0565b600061019561020c565b509695505050505050565b60006101aa61020c565b5095945050505050565b6101bc610a74565b6101c4610227565b905090565b60006101db63b47b2fb160e01b610277565b979650505050505050565b60006101c46103d6565b600061020263fe9a6f4560e01b6103eb565b9695505050505050565b6000604051630a85dc2960e01b815260040160405180910390fd5b61022f610a74565b5060408051610100810182526000808252602082018190526001928201839052606082018190526080820181905260a082019290925260c0810182905260e081019190915290565b600080610282610416565b9050600061028e61043a565b60018301805491925060006102a283610e71565b909155505060068101546102bd90610100900460ff1661045e565b6006810154610100900460ff166103ce576040805180820190915260068152650d8cadccee8d60d31b602082015260048201546102fa91906104a2565b60005b60048201548110156103cc576103b982600401828154811061032157610321610e8a565b90600052602060002001805461033690610ea0565b80601f016020809104026020016040519081016040528092919081815260200182805461036290610ea0565b80156103af5780601f10610384576101008083540402835291602001916103af565b820191906000526020600020905b81548152906001019060200180831161039257829003601f168201915b50505050506104eb565b50806103c481610e71565b9150506102fd565b505b509192915050565b6000806103e1610416565b6001015492915050565b6000806103f6610416565b600181018054919250600061040a83610e71565b90915550929392505050565b7ff3438885051c2d9738b375a323a098c058d6c0e57a376bd4989734002b250c4590565b7f4bc1672041418a922447d83c0efd37e6707ed20ab7e53ca3f20ce1d16cac307590565b604051811515602482015261049f9060440160408051601f198184030181529190526020810180516001600160e01b03166332458eed60e01b179052610598565b50565b6104e782826040516024016104b8929190610f24565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610598565b5050565b606060006104f761043a565b60068101805461ffff19166101011790559050600080610516856105a1565b915091506000610525826105c1565b965090506105338382610647565b945060038651108061054a5750600684015460ff16155b156105795784516105649060018601906020880190610ab8565b50505050600601805461ff0019169055919050565b6105838587610a27565b955061058e866104eb565b5050505050919050565b61049f81610a53565b606080828060200190518101906105b89190610ff7565b91509150915091565b602081015160608060005b600585516105da91906110c1565b81101561063e5781856105ee8360056110d4565b815181106105fe576105fe610e8a565b602001015160f81c60f81b60405160200161061a9291906110e7565b6040516020818303038152906040529150808061063690610e71565b9150506105cc565b50919391925050565b606081600f600482811a9081901c821691168360008381036106e75760408051600481526024810182526020810180516001600160e01b03166001600160e01b031989161790529051309161069b91611116565b6000604051808303816000865af19150503d80600081146106d8576040519150601f19603f3d011682016040523d82523d6000602084013e6106dd565b606091505b5092509050610789565b306001600160a01b03168589604051602401610703919061116d565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516107419190611116565b6000604051808303816000865af19150503d806000811461077e576040519150601f19603f3d011682016040523d82523d6000602084013e610783565b606091505b50925090505b8260ff166000036107e357604080516001808252818301909252600091602080830190803683370190505090506000816000815181106107cb576107cb610e8a565b60209081029190910101529550610a21945050505050565b8260ff1660010361087c576000828060200190518101906108049190611187565b905060008460ff166001600160401b0381111561082357610823610f46565b60405190808252806020026020018201604052801561084c578160200160208202803683370190505b509050818160008151811061086357610863610e8a565b60209081029190910101529650610a2195505050505050565b8260ff16600203610939576000808380602001905181019061089e91906111a0565b9150915060008560ff166001600160401b038111156108bf576108bf610f46565b6040519080825280602002602001820160405280156108e8578160200160208202803683370190505b50905082816000815181106108ff576108ff610e8a565b602002602001018181525050818160018151811061091f5761091f610e8a565b60209081029190910101529750610a219650505050505050565b8260ff16600303610a1b5760008060008480602001905181019061095d91906111c4565b92509250925060008660ff166001600160401b0381111561098057610980610f46565b6040519080825280602002602001820160405280156109a9578160200160208202803683370190505b50905083816000815181106109c0576109c0610e8a565b60200260200101818152505082816001815181106109e0576109e0610e8a565b6020026020010181815250508181600281518110610a0057610a00610e8a565b60209081029190910101529850610a21975050505050505050565b50505050505b92915050565b6040518190610a3c90849083906020016111f2565b604051602081830303815290604052905092915050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b828054828255906000526020600020908101928215610af3579160200282015b82811115610af3578251825591602001919060010190610ad8565b50610aff929150610b03565b5090565b5b80821115610aff5760008155600101610b04565b6001600160a01b038116811461049f57600080fd5b600060a08284031215610b3f57600080fd5b50919050565b600060608284031215610b3f57600080fd5b60008083601f840112610b6957600080fd5b5081356001600160401b03811115610b8057600080fd5b602083019150836020828501011115610b9857600080fd5b9250929050565b60008060008060006101408688031215610bb857600080fd5b8535610bc381610b18565b9450610bd28760208801610b2d565b9350610be18760c08801610b45565b92506101208601356001600160401b03811115610bfd57600080fd5b610c0988828901610b57565b969995985093965092949392505050565b6000806000806000806101608789031215610c3457600080fd5b8635610c3f81610b18565b9550610c4e8860208901610b2d565b9450610c5d8860c08901610b45565b935061012087013592506101408701356001600160401b03811115610c8157600080fd5b610c8d89828a01610b57565b979a9699509497509295939492505050565b60008060008060006101008688031215610cb857600080fd5b8535610cc381610b18565b9450610cd28760208801610b2d565b935060c0860135610ce281610b18565b925060e08601356001600160401b03811115610bfd57600080fd5b6000610100820190508251151582526020830151151560208301526040830151151560408301526060830151151560608301526080830151610d43608084018215159052565b5060a0830151610d5760a084018215159052565b5060c0830151610d6b60c084018215159052565b5060e0830151610d7f60e084018215159052565b5092915050565b6000806000806000806101208789031215610da057600080fd5b8635610dab81610b18565b9550610dba8860208901610b2d565b945060c0870135610dca81610b18565b935060e0870135600281900b8114610de157600080fd5b92506101008701356001600160401b03811115610c8157600080fd5b6000806000806000806101208789031215610e1757600080fd5b8635610e2281610b18565b9550610e318860208901610b2d565b945060c0870135935060e087013592506101008701356001600160401b03811115610c8157600080fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610e8357610e83610e5b565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610eb457607f821691505b602082108103610b3f57634e487b7160e01b600052602260045260246000fd5b60005b83811015610eef578181015183820152602001610ed7565b50506000910152565b60008151808452610f10816020860160208601610ed4565b601f01601f19169290920160200192915050565b604081526000610f376040830185610ef8565b90508260208301529392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715610f8457610f84610f46565b604052919050565b600082601f830112610f9d57600080fd5b81516001600160401b03811115610fb657610fb6610f46565b610fc9601f8201601f1916602001610f5c565b818152846020838601011115610fde57600080fd5b610fef826020830160208701610ed4565b949350505050565b6000806040838503121561100a57600080fd5b82516001600160401b038082111561102157600080fd5b818501915085601f83011261103557600080fd5b815160208282111561104957611049610f46565b8160051b611058828201610f5c565b928352848101820192828101908a85111561107257600080fd5b958301955b8487101561109057865182529583019590830190611077565b92890151929750919450505050808211156110aa57600080fd5b506110b785828601610f8c565b9150509250929050565b81810381811115610a2157610a21610e5b565b80820180821115610a2157610a21610e5b565b600083516110f9818460208801610ed4565b6001600160f81b0319939093169190920190815260010192915050565b60008251611128818460208701610ed4565b9190910192915050565b600081518084526020808501945080840160005b8381101561116257815187529582019590820190600101611146565b509495945050505050565b6020815260006111806020830184611132565b9392505050565b60006020828403121561119957600080fd5b5051919050565b600080604083850312156111b357600080fd5b505080516020909101519092909150565b6000806000606084860312156111d957600080fd5b8351925060208401519150604084015190509250925092565b6040815260006112056040830185611132565b82810360208401526112178185610ef8565b9594505050505056fea26469706673582212200d503e83593674a93de4cab8396bb8d06e445fb66bf69593a05ff4fa8a5eeeb864736f6c63430008140033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
